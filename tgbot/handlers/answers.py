from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from database.requests import get_poll_data

import keyboards.answers as kb

router = Router()


@router.message(Command("answers"))
async def show_poll_users(message: Message):
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ, –æ—Ç–∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≤–∞—à–∏—Ö –æ–ø—Ä–æ—Å–∞—Ö:",
        reply_markup=kb.answers_menu,
    )


@router.callback_query(F.data == "answers")
async def show_lobby_users_clb(callback: CallbackQuery):
    callback.answer("–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤")
    user_id = callback.from_user.id  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ª–æ–±–±–∏, —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –∏ –∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö
    poll_data = await get_poll_data(user_id)

    if not poll_data:
        await callback.message.answer("–£ –≤–∞—Å –Ω–µ—Ç –æ–ø—Ä–æ—Å–æ–≤ —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏
    response = " –û—Ç–≤–µ—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≤–∞—à–∏—Ö –æ–ø—Ä–æ—Å–∞—Ö:\n\n"
    current_poll_id = None

    for data in poll_data:
        if data["lobby_id"] != current_poll_id:
            current_poll_id = data["lobby_id"]
            response += f"üö™ –û–ø—Ä–æ—Å #{current_poll_id} (–í–æ–ø—Ä–æ—Å #{data['polls_id']}, '{data['question']}'):\n"

        response += (
            f"\t\t üë§ {data['first_name']} {data['last_name']}: {data['answer']}\n"
        )
    # print(data) #logging info
    await callback.message.answer(response)


# output for just taken poll
@router.callback_query(F.data == "ans")
async def show_last_lobby_users_clb(callback: CallbackQuery):
    callback.answer("–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–ø—Ä–æ—Å–∞")
    user_id = callback.from_user.id  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ª–æ–±–±–∏, —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –∏ –∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö
    poll_data = await get_poll_data(user_id)

    if not poll_data:
        await callback.message.answer("–í—ã –µ—â–µ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∏ –æ–ø—Ä–æ—Å–æ–≤.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏

    current_poll_id = None

    for data in poll_data:
        if data["lobby_id"] != current_poll_id:
            current_poll_id = data["lobby_id"]
            response = f"–û—Ç–≤–µ—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≤–∞—à–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–º –æ–ø—Ä–æ—Å–µ (–≥–¥–µ —Ö–æ—Ç—å –∫—Ç–æ-—Ç–æ –æ—Ç–≤–µ—Ç–∏–ª):\n\n üö™ –û–ø—Ä–æ—Å #{current_poll_id} (–í–æ–ø—Ä–æ—Å #{data['polls_id']}, '{data['question']}'):\n"

        response += (
            f"\t\t üë§ {data['first_name']} {data['last_name']}: {data['answer']}\n"
        )
    # print(data)  # logging info
    await callback.message.answer(response)
